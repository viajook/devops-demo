name: CI/CD Pipeline
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the master/main branch
  push:
    branches: [master]

env:
  REGISTRY: ghcr.io

jobs:
  #Test's job
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest

    #Jobs steps
    steps:
      #Check out your repository under
      - uses: actions/checkout@v3
      #Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          #cache maven
      #Set up Maven cache
      - name: Cache Maven packages
        #this action allows caching the dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{hashFiles('**/pom.xml')}}
          restore-keys: ${{ runner.os }}-m2

      #Run Tests
      - name: Run Tests
        run: mvn -B test

  # Build jobs
  build:
    # depends on test's job
    needs: tests
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository
      - uses: actions/checkout@v3
      #Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
          # Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - run: mkdir staging && cp target/*.jar staging
      #Upload the jar artifact
      - name: Upload JAR Artifact
        #This uploads artifacts from your workflow
        uses: actions/upload-artifact@v3
        with:
          #Set artifact name
          name: RunnableJar
          #From this path
          path: staging

  #Deploy to GHCR
  push-image-ghcr:
    needs: build
    name: Deploy Images to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: "Chechout GitHub Action"
        uses: actions/checkout@v3

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          # Log out from the Docker registryat the end of the job
          logout: true

      - name: "Build the Docker Image"
        run: |
          docker build . --tag ghcr.io/${{github.actor}}/devops-demo:latest
          docker push ghcr.io/${{github.actor}}/devops-demo:latest
